{"version":3,"file":"artworkgallery/view.js","mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMA,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;AACxD,MAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;AACzD,MAAME,cAAc,GAAG,KAAK,CAAC,CAAC;;AAE9B,SAASC,YAAYA,CAACC,cAAc,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,aAAa,GAAGR,aAAa,CAACS,SAAS;EAC7C,MAAMC,SAAS,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;EAEnC,SAASC,SAASA,CAACC,WAAW,EAAE;IAC9B,MAAMC,WAAW,GAAGD,WAAW,GAAGJ,SAAS;IAC3C,MAAMM,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,WAAW,GAAGR,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEtDP,aAAa,CAACS,SAAS,GAAGD,aAAa,GAAG,CAACF,cAAc,GAAGE,aAAa,IAAIQ,QAAQ;IAErF,IAAID,WAAW,GAAGR,QAAQ,EAAE;MAC1BY,qBAAqB,CAACN,SAAS,CAAC;IAClC;EACF;EACAM,qBAAqB,CAACN,SAAS,CAAC;AAClC;AAEA,SAASO,eAAeA,CAAA,EAAG;EACzBf,YAAY,CAACF,OAAO,CAACkB,YAAY,GAAGrB,aAAa,CAACqB,YAAY,EAAEjB,cAAc,GAAG,CAAC,CAAC;EAEnFkB,UAAU,CAAC,MAAM;IACfjB,YAAY,CAAC,CAAC,EAAED,cAAc,GAAG,CAAC,CAAC;IAEnCkB,UAAU,CAACF,eAAe,EAAEhB,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC,EAAEA,cAAc,GAAG,CAAC,CAAC;AACxB;AAEAgB,eAAe,CAAC,CAAC,C","sources":["webpack://ten-thousand-cuts/./src/artworkgallery/view.js"],"sourcesContent":["// const scrollableDiv = document.getElementById('artgrid');\n// let scrollDirection = 1; // 1 for down, -1 for up\n// let scrollInterval;\n// let isHovered = false;\n\n// function autoScroll() {\n//   if (!isHovered) {\n//     scrollableDiv.scrollTop += scrollDirection;\n\n//     // Reverse direction if reaching top or bottom\n//     if (\n//       scrollableDiv.scrollTop + scrollableDiv.clientHeight >=\n//         scrollableDiv.scrollHeight ||\n//       scrollableDiv.scrollTop <= 0\n//     ) {\n//       scrollDirection *= -1;\n//     }\n//   }\n// }\n\n// // Start autoscrolling\n// scrollInterval = setInterval(autoScroll, 300);\n\n// // Pause on hover\n// scrollableDiv.addEventListener('mouseover', () => {\n//   isHovered = true;\n// });\n\n// // Resume on mouse leave\n// scrollableDiv.addEventListener('mouseout', () => {\n//   isHovered = false;\n// });\n\n\n\n// const element = document.getElementById('artgrid');\n\n// element.animate([\n//   { opacity: 0, transform: 'translateY(-50px)' }, // Keyframe 1: Initial state\n//   { element.scrollTop = element.scrollHeight}    // Keyframe 2: Final state\n// ], {\n//   duration: 1000, // Animation duration in milliseconds\n//   easing: 'ease-in-out', // Easing function\n//   iterations: 1 // Number of times to repeat the animation\n// });\n\n// function scrollToBottom(element, duration) {\n//   let start = element.scrollTop;\n//   let end = element.scrollHeight - element.clientHeight;\n//   let startTime = null;\n\n//   function animate(currentTime) {\n//     startTime = startTime || currentTime;\n//     let progress = (currentTime - startTime) / duration;\n\n//     if (progress >= 1) {\n//       progress = 1;\n//     }\n\n//     element.scrollTop = start + (end - start) * progress;\n\n//     if (progress < 1) {\n//       requestAnimationFrame(animate);\n//     }\n//   }\n//   requestAnimationFrame(animate);\n// }\n\n// const myDiv = document.getElementById('artgrid');\n// scrollToBottom(myDiv, 500); // Scrolls over 500ms\n\nconst scrollableDiv = document.getElementById('artgrid');\nconst content = document.getElementById('artgrid__strip');\nconst scrollDuration = 15000; // Time in milliseconds for one scroll cycle (down and up)\n\nfunction smoothScroll(targetPosition, duration) {\n  const startPosition = scrollableDiv.scrollTop;\n  const startTime = performance.now();\n\n  function animation(currentTime) {\n    const elapsedTime = currentTime - startTime;\n    const progress = Math.min(elapsedTime / duration, 1); // Ensure progress doesn't exceed 1\n\n    scrollableDiv.scrollTop = startPosition + (targetPosition - startPosition) * progress;\n\n    if (elapsedTime < duration) {\n      requestAnimationFrame(animation);\n    }\n  }\n  requestAnimationFrame(animation);\n}\n\nfunction startScrollLoop() {\n  smoothScroll(content.clientHeight - scrollableDiv.clientHeight, scrollDuration / 2);\n\n  setTimeout(() => {\n    smoothScroll(0, scrollDuration / 2);\n\n    setTimeout(startScrollLoop, scrollDuration / 2); // Restart the loop after scrolling back to the top\n  }, scrollDuration / 2);\n}\n\nstartScrollLoop();"],"names":["scrollableDiv","document","getElementById","content","scrollDuration","smoothScroll","targetPosition","duration","startPosition","scrollTop","startTime","performance","now","animation","currentTime","elapsedTime","progress","Math","min","requestAnimationFrame","startScrollLoop","clientHeight","setTimeout"],"sourceRoot":""}